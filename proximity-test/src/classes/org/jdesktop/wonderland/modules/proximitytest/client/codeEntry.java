/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.jdesktop.wonderland.modules.proximitytest.client;
import com.illposed.osc.OSCMessage;
import com.jme.math.Vector3f;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import org.jdesktop.wonderland.modules.proximitytest.client.ssd;
import javax.swing.*;
/**
 *
 * @author nocturne
 */
public class codeEntry extends javax.swing.JPanel {
    String cellID = "4"; //change this to the cellID of the door 
	Vector3f up = new Vector3f(802.17f, -17f, 574.14f); //change this to the position you want the door to be in exactly
	
    String code = "";
    String check ="";
    JFrame form;
    ProximityCell cell;
    /**
     * Creates new form codeEntry
     */
    private static java.util.logging.Logger logger = java.util.logging.Logger.getLogger(codeEntry.class.getName());
    public codeEntry() {
        
        initComponents();
        
    }
    
    public codeEntry(String name, JFrame f, ProximityCell cell){
     form = f;
     //form = new codeEntry();
     this.cell = cell;
     form.setName(name);
     initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();

        jTextField1.setBackground(new java.awt.Color(0, 0, 0));
        jTextField1.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(51, 204, 0));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextField1PropertyChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );
    }// </editor-fold>//GEN-END:initComponents
   
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        if (jTextField1.getText().equals("1")){
            jTextField1.setText("1000");
        }
          if (!jTextField1.getText().equals("")){
              
            //jTextField1.setText("Code sent!");
            //debugTextArea.append("\nCode submitted: " + jTextField3.getText());
            check = jTextField1.getText();
            setCode(check);
            
        } else {
            //debugTextArea.append("\nblank code field");
        }   
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTextField1PropertyChange
        // TODO add your handling code here:
        jTextField1.addKeyListener(new KeyListener() {
    @Override
    public void keyTyped(KeyEvent arg0) {}
    @Override
    public void keyReleased(KeyEvent arg0) {
        Font font1 = new Font("Code2000", Font.BOLD, 40);
        jTextField1.setFont(font1);
        if (arg0.getKeyCode() == KeyEvent.VK_6){
            //check += "6";
            String temp = jTextField1.getText();
            temp = temp.substring(0, temp.length()-1);
            jTextField1.setText(temp);
            jTextField1.setText(jTextField1.getText() + "\u138c");
        } else if (arg0.getKeyCode() == KeyEvent.VK_7){
            //check += "7";
            String temp = jTextField1.getText();
            temp = temp.substring(0, temp.length()-1);
            jTextField1.setText(temp);
            jTextField1.setText(jTextField1.getText() + "\u0403");
        } else if (arg0.getKeyCode() == KeyEvent.VK_8){
            //check += "8";
            String temp = jTextField1.getText();
            temp = temp.substring(0, temp.length()-1);
            jTextField1.setText(temp);
            jTextField1.setText(jTextField1.getText() + "\u0470");
        } else if (arg0.getKeyCode() == KeyEvent.VK_9){
            //check += "9";
            String temp = jTextField1.getText();
            temp = temp.substring(0, temp.length()-1);
            jTextField1.setText(temp);
            jTextField1.setText(jTextField1.getText() + "\u1228");
        }
        
    }
    @Override
    public void keyPressed(KeyEvent arg0) {}
});
    }//GEN-LAST:event_jTextField1PropertyChange

    
    
    public void setCode (String code){
        this.code = code;
	codeCheck check = new codeCheck(code);
        boolean correct = check.check(code);
        if (correct){
            jTextField1.setText("WELL DONE!");
             String ip = "127.0.0.1";
        ssd s = new ssd(ip, 5103);
            
            logger.warning("The object of OSC has been created");
            Object args[] = new Object[1];
	    args[0] = new Integer(1);
            args[0] = 0;
            OSCMessage osm = new OSCMessage("/osctest/alive", args);
               
                s.sendOSC(osm);
                logger.warning("The OSCmessage has been send");
                form.dispose();
                
        }
        else{
            jTextField1.setText("Try Again..");
        }
        
    }
    
    public String getCode (){
        return code;
    } 
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
